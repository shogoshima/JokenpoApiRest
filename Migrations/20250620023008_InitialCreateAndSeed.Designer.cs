// <auto-generated />
using System;
using JokenpoApiRest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JokenpoApiRest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250620023008_InitialCreateAndSeed")]
    partial class InitialCreateAndSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JokenpoApiRest.Models.Hand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Hands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pedra"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Papel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tesoura"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Spock"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Lagarto"
                        });
                });

            modelBuilder.Entity("JokenpoApiRest.Models.HandRelation", b =>
                {
                    b.Property<int>("WinnerHandId")
                        .HasColumnType("integer");

                    b.Property<int>("LoserHandId")
                        .HasColumnType("integer");

                    b.HasKey("WinnerHandId", "LoserHandId");

                    b.HasIndex("LoserHandId");

                    b.ToTable("HandRelations");

                    b.HasData(
                        new
                        {
                            WinnerHandId = 1,
                            LoserHandId = 3
                        },
                        new
                        {
                            WinnerHandId = 1,
                            LoserHandId = 5
                        },
                        new
                        {
                            WinnerHandId = 2,
                            LoserHandId = 1
                        },
                        new
                        {
                            WinnerHandId = 2,
                            LoserHandId = 4
                        },
                        new
                        {
                            WinnerHandId = 3,
                            LoserHandId = 2
                        },
                        new
                        {
                            WinnerHandId = 3,
                            LoserHandId = 5
                        },
                        new
                        {
                            WinnerHandId = 4,
                            LoserHandId = 1
                        },
                        new
                        {
                            WinnerHandId = 4,
                            LoserHandId = 3
                        },
                        new
                        {
                            WinnerHandId = 5,
                            LoserHandId = 4
                        },
                        new
                        {
                            WinnerHandId = 5,
                            LoserHandId = 2
                        });
                });

            modelBuilder.Entity("JokenpoApiRest.Models.Participation", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoundId")
                        .HasColumnType("integer");

                    b.Property<int?>("HandId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoundId");

                    b.HasIndex("HandId");

                    b.HasIndex("RoundId");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("JokenpoApiRest.Models.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("JokenpoApiRest.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JokenpoApiRest.Models.HandRelation", b =>
                {
                    b.HasOne("JokenpoApiRest.Models.Hand", "LoserHand")
                        .WithMany()
                        .HasForeignKey("LoserHandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JokenpoApiRest.Models.Hand", "WinnerHand")
                        .WithMany()
                        .HasForeignKey("WinnerHandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoserHand");

                    b.Navigation("WinnerHand");
                });

            modelBuilder.Entity("JokenpoApiRest.Models.Participation", b =>
                {
                    b.HasOne("JokenpoApiRest.Models.Hand", "Hand")
                        .WithMany()
                        .HasForeignKey("HandId");

                    b.HasOne("JokenpoApiRest.Models.Round", "Round")
                        .WithMany()
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JokenpoApiRest.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hand");

                    b.Navigation("Round");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
